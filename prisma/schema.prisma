generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Comandas {
  id               String             @id @default(cuid())
  title            String
  table            Int
  comment          String?
  priority         Boolean            @default(false)
  authorId         String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  dispatchedAt     DateTime?
  author           User?              @relation(fields: [authorId], references: [id], onDelete: Cascade)
  PlatosOnComandas PlatosOnComandas[]
}

model Platos {
  id               String             @id @default(cuid())
  name             String
  price            Float?
  PlatosOnComandas PlatosOnComandas[]
}

model PlatosOnComandas {
  platoId   String
  comandaId String
  quantity  Int      @default(1)
  comanda   Comandas @relation(fields: [comandaId], references: [id], onDelete: Cascade)
  plato     Platos   @relation(fields: [platoId], references: [id], onDelete: Cascade)

  @@id([platoId, comandaId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  comandas      Comandas[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
